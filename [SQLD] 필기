


[다른분 _ 합격 후기 📌](https://forcetyty.tistory.com/24)
다른분 합격 후기 인데 공부 방법이랑 책이랑 너무 잘 올리셔서 공유!! 

--- 

# 모델링

## 모델링의 정의 
> - 다양한 현상을 표기법에 의해 표기 하는것 
- 정보시스템을 구축하기 위한 데이터 관점의 업무 분석 기법
- 현실세계의 데이터에 대해 약속된 표기법에 의해 표현하는 과정
- 데이터 베이스를 구축하기 위한 분석/ 설계의 과정


## 특징 3가지 
> 추상화 , 단순화 , 명확화 

## 모델링의 3가지 관점 
> 데이터 관점, 프로세스관점, 상관관점 

## 모델의 유의점 
> - **중복** : 모델은 같은 데이터를 여러장소에 같은 정보를 저장하는 잘못을 하지 않도록 한다. 
- **비유연성** : 수시로 변경 -> 유지보수가 어려움 가중  => 데이터 정의를  프로세스와 분리
- **비일관성** : ex) 신용상태 갱신없이 납부 이력 정보 갱신 -> 데이터 모순 발생 : 데이터 간의 상호연관 관계에 대해 명확하게 정의 

## 3가지 데이터 모델링 

> - **개념적 데이터 모델링 **
	: 추상화 수준이 높고 업무중심적이고 포괄적인 수준의 모델링 진행, 전시적 데이터 모델링, EA수립시 많이 이용. 
 - **논리적 데이터 모델링**
   : 시스템으로 구축하고자 하는 업무에 대해 key, 속성, 관계등을 정확하게 표현, 재사용성이 높음 
 - **물리적 데이터 모델링**
   : 실제로 데이터 베이스에 이식할 수 있도록 성능 저장 등 물리적인 성격을 고려하여 설계 
   
---

# 스키마 

## 개념 스키마 
> - 모든 사용자 관점을 통합한 조직 전체 관점의 `통합적 표현`
- 데이터 모델링은 통합관점을 가지고 있는 개념 스키마를 만드는 과정 

## 외부 스키마
> - 사용자 뷰(View)
- 사용자나 응용프로그래머가 각 개인의 입장에서 필요하는 데이터 베이스의 논리적 구조를 정의 
- 전체 데이터 베이스의 한 논리적인 부분
- 일반 사용자는 SQL을 사용하며 DB를 사용한다. 

## 내부 스키마 
> - 물리적 저장장치 입장에서 본 데이터베이스 구조, 물리적인 저장장치와 밀접한 계층
- 실제 데이터베이스에 저장될 레코드의 물리적 구조를 정의 
- 데이터 항목의 표현방법, 내부 레코드의 물리적 순서등을 나타냄 

---

# 엔터티 
## 엔터티의 특징 
> - 반드시 해당 업무에서 필요하다고 관리하고자 하는 정보이어야 한다.
- 유일한 식별자에 의해 식별이 가능해야 한다.
- 영속적으로 존재하는 인스턴스의 집합 이어야 한다.
- 엔터티는 업무 프로세스에 의해 이용되어야 한다.
- 엔터티는 반드시 속성이 있어야 한다. 
- 엔터티는 다른 엔터티와 최소 한 개 이상의 관계가 있어야 한다. 


## 기본 엔터티 (키 엔터티)
> - 업무에 원래 존재하는 정보
- 다른 엔터니와의 관계에 의해 생성가능
- 타 엔터티의 부모 역활을 하게됨 

## 행위 엔터티
> - 두개 이상의 부모 엔터티로 부터 발생
- 자주 내용이 변경되거나 데이터량이 증가
- 분석초기 단계에서는 잘 나타나지 않고 상세 설계나 프로세스와 상관 모델링을 하면서 도출된다. 

## 중심 엔터티 
> - 기본엔터티로 부터 발생하며, 업무에 있어서 중요하다.
- 데이터량이 많이 발생되고 다른 엔터티와의 관계를 통해 행위 엔터티를 생성한다. 


## 엔터티 명명의 기준
> - 가능하면 현업 업무에서 사용하는 언어 
 - 가능하면 약어를 사용하지 않는다. 
 - 단수 명사를 사용 
 - 모든 엔터티를 통틀어 유일해야 한다.
 - 생성의미 대로 이름을 부여 한다. 



 ---
 
 # 속성 
 
 ## 문제 
 업무에서 필요로 하는 인스턴스에서 관리하고자 하는 의미상 더 이상 분리 되지 않는 최소의 데이터 단위를 무엇이라고 하는가? 
  **" 속성 "**
  
 ## 속성이란 
 >  - 엔터티에 대한 자세하고 구체적인 정보를 나타낸다.
 - 하나의 엔터티는 두개 이상의 속성을 갖는다. 
 - 하나의 인스턴스에서 각각의 속성은 하나의 속성값을 가져야 한다.
 - 속성도 집합이다. 
 
## 속성의 분류 
> - **기본속성** : 원래 가지고 있어야 하는 속성 , 업무로 부터 추출된 일반적인 속성 
 - **설계속성** : 원래 존재하지 않지만 필요에 따라 설계자가 추가한 속성 
 - **파생속성** : 데이터를 조회할때 빠른 성능을 낼 수 있도록 하기 위해 원래 속성 값을 계산하여 저장할 수 있도록한 속성 
 
 
## 문제2 
각 속성은 가질 수 있는 값의 범위가 있는데 이를 그 속성의 "OOO" 이라고 한다. 엔터티 내에서 속성에 대한 데이터타입과 크기 그리고 제약 사항을 지정 하는 것은 ? 

**"도메인"**
   

## 속성의 명칭 
> - 해당업무에서 사용하는 이름을 부여한다.
- 서술식 속성명은 사용하지 않는다.
- 약어 사용은 가급적 제한한다.
- 전체 데이터모델에서 유일성 확보하는 것이 좋다. 


---

# 모델 관계 
## 모델 관계 표기법 
> - 관계명 : 관계의 이름 
- 관계치수 : 1:1 , 1:M , M:N 
- 관계 선택 사양 : 필수 관계, 선택 관계 

## 관계 읽기 
> - 기준 에터티를 한개 또는 각 으로 읽는다. 
- 대상 엔터티의 관계참여도 즉 개수(하나, 하나이상)를 읽는다.
- 관계선택사양과 관계명을 읽는다. 

## 관계 도출 체크사항 
> - 두 개의 엔터티 사이에 관심있는 연관규칙이 존재 하는가? 
- 두 개의 엔터티 사이에 정보의 조합이 발생되는가? 
- 업무기술서, 장표에 관계연결에 대한 규칙이 서술되어 있는가? 
- 업무기술서, 장표에 관계연결을 가능하게 하는 동사 가 있는가? 


---

# 식별자 

## 식별자의 종류 
![](https://images.velog.io/images/yuhayung7296/post/986ea59a-b91e-4c55-a4a2-61275d68c611/image.png)

![](https://images.velog.io/images/yuhayung7296/post/39e910d2-78c3-4b83-92b6-283d10c04bf2/image.png)

식별자의 종류  : `주식 별자`, `보조 식별자`, `내부 식별자`, `외부 식별자`, `단일 식별자`, `복합 식별자`, `본질 식별자`, `인조 식별자`. 


## 주식별자 고려 사항 
> - 주식별자에 의해 엔터티 내의 모든 인스턴스들이 유일하게 구분 되어야 한다. 
- 주식별자를 구성하는 속성의 수는 유일성을 만족하는 최소의 수가 되어야 한다.
- 지정된 주식별자의 값은 자주 변하지 않는 것 이어야 한다.
- 주식별자가 지정이 되면 반드시 값이 들어와야 한다. 

## 주식별자 특징 
> - 유일성 : 주식별자에 의해 엔터티내에 모든 인스턴스들을 유일하게 구분함
- 최소성 : 주식별자를 구성하는 속성의 수는 유일성을 만족하는 최소의 수가 되어야 함
- 불변성 : 주식별자가 한번 특정 엔터티에 지정되면 그 식별자의 값은 변하지 않아야 한다. 
- 존재성 : 주식별자가 지정되면 반드시 데이터 값이 존재(Null안됨)

## 주식별자 도출 하기 위한 기준
 > - 해당 업무에서 자주 이용되는 속성을 주식별자로 지정 
 - 명칭 내역등과 같이 이름으로 기술되는 것들을 가능한 주식별자로 지정하지 않는다. 
 - 복합으로 주식별자로 구성할 경우 너무 많은 속성이 포함되지 않는다. 
 
 
## 식별자와 비식별자 관계 비교 
![](https://images.velog.io/images/yuhayung7296/post/e88d06f0-03fa-4fc8-9562-4be2fe0f617d/image.png)

![](https://images.velog.io/images/yuhayung7296/post/c692c8b5-6c08-438f-b9e2-069e6da08a18/image.png)


## 비식별자 관계로 연결 고려사항 
> - 부모엔터티에 참조값이 없어도 자식엔터티의 인스턴스가 생성될 수 있는 경우
 - 여러 개의 엔터티를 하나로 통합되면서 각각의 엔터티가 갖고 있던 여러개의 개별 관계가 통합되는 경우
  - 자식쪽 엔터티의 주식별자를 부모엔터티와는 별도로 생성하는 것이 더 유리하다고 판단되는 경우 
  - 엔터티별로 데이터의 생성주기를 다르게 관리 할 경우 
  	1. 부모엔터티의 인스턴스가 자식의 엔터티와 관계를 가지고 있엇지만 남겨두고 먼저 소멸된 경우 (비식별자 관계)
    2. 부모 엔터티의 인스턴스가 자식 엔터티와 같이 소멸되는 경우 (식별자 관계)
    
 
## 식별자 VS 비식별자 
> - ** 식별자 관계 **
 : 부모 엔터티의 주식별자가 자식엔터티의 주 식별자로 상속된 경우 
- ** 비식별자 관계**
 : 부모 엔터티의 주식별자가 자식 엔터티의 일반 속성으로 상속된 경우 
 
 
---

**어떻게 보면 엄청 많고 어떻게 보면 
자격 시험이니깐 적은 양일 수 있다. **

1단원 내용만 정리했다. 
10문제 출제 되니깐 과락을 면하기 위해서 열나게 외우자!! 🔥

